
CREATE SEQUENCE SEQ_COMMENT_ID
START WITH 1               -- 시퀀스 시작 값
INCREMENT BY 1            -- 값 증가 단위 (1씩 증가)
NOCACHE                   -- 캐시 사용 안 함 (선택 사항)
NOCYCLE                   -- 값이 최대 값에 도달하면 순환하지 않음 (선택 사항)
;
--TB_PETITION_COMMENTS

CREATE TABLE TB_PETITION_COMMENTS (
    COMMENT_ID NUMBER(18) DEFAULT SEQ_COMMENT_ID.NEXTVAL NOT NULL,                  -- 댓글 ID (PK)
    PETITION_ID NUMBER(18) NOT NULL,                -- 청원 ID (FK)
    USER_ID VARCHAR2(50) NOT NULL,                  -- 작성자 ID (FK)
    TYPE CHAR(1) DEFAULT 'C',
    PARENT_COMMENT_ID NUMBER(18) DEFAULT NULL,      -- 부모 댓글 ID (NULL이면 최상위 댓글)
    CONTENT VARCHAR2(1000) NOT NULL,                -- 댓글 내용
    CREATED_DATE DATE DEFAULT SYSDATE NOT NULL,       -- 생성일
    CONSTRAINT PK_TB_PETITION_COMMENTS PRIMARY KEY (COMMENT_ID),
    CONSTRAINT FK_TB_PETITION_COMMENTS_PETITION_ID FOREIGN KEY (PETITION_ID)
        REFERENCES TB_PETITIONS (PETITION_ID) ON DELETE CASCADE,
    CONSTRAINT FK_TB_PETITION_COMMENTS_USER_ID FOREIGN KEY (USER_ID)
        REFERENCES TB_USERS (USER_ID) ON DELETE CASCADE,
    CONSTRAINT FK_TB_PETITION_COMMENTS_PARENT_ID FOREIGN KEY (PARENT_COMMENT_ID)
        REFERENCES TB_PETITION_COMMENTS (COMMENT_ID) ON DELETE CASCADE
);
 
drop table TB_PETITION_COMMENTS;
DROP SEQUENCE SEQ_COMMENT_ID;
 

-- 최상위 댓글
INSERT INTO TB_PETITION_COMMENTS (PETITION_ID, USER_ID, CONTENT)
VALUES (1, 'qwer', '최상위 댓글입니다.');

-- 대댓글 (부모 댓글 ID: 1)
INSERT INTO TB_PETITION_COMMENTS (PETITION_ID, USER_ID, PARENT_COMMENT_ID, CONTENT)
VALUES (1, 'qwer', 13, '첫 번째 댓글의 대댓글입니다.');

-- 대댓글의 대댓글 (부모 댓글 ID: 2)
INSERT INTO TB_PETITION_COMMENTS (PETITION_ID, USER_ID, PARENT_COMMENT_ID, CONTENT)
VALUES (1, 'qwer', 14, '대댓글의 대댓글입니다.');

COMMIT;

SELECT *
  FROM TB_PETITION_COMMENTS;
  
SELECT COMMENT_ID AS commentId,
       PETITION_ID AS petitionId,
       CONTENT,
       CREATED_DATE AS createdDate
  FROM TB_PETITION_COMMENTS
 WHERE USER_ID = 'qwer';
 
SELECT COMMENT_ID AS commentId,
           PETITION_ID AS petitionId,
           USER_ID AS userId,
           PARENT_COMMENT_ID AS parentCommentId,
           CONTENT,
           CREATED_DATE AS createdDate
      FROM TB_PETITION_COMMENTS
     WHERE PETITION_ID = #{petitionId}
     ORDER BY NVL(PARENT_COMMENT_ID, COMMENT_ID),
              CREATED_DATE
